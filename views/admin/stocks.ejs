<%- include("../../views/partials/admin/header") %>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Stock Management</h2>
            </div>
            <div>
                <input type="text" placeholder="Search product name" class="form-control bg-white">
            </div>
        </div>

        <div class="card mb-4">
            <header class="card-header">
                <div class="row gx-3">
                    <div class="col-lg-2 col-6 col-md-3">
                        <select class="form-select">
                            <option value="All">All Categories</option>
                            <option value="Electronics">Electronics</option>
                            <option value="Clothing">Clothing</option>
                            <option value="Home">Home</option>
                        </select>
                    </div>
                </div>
            </header>

            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>#ID</th>
                                <th>Product</th>
                                <th>Category</th>
                                <th>Current Stock</th>
                                <th>Update Stock</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% for(let i=0; i < products.length; i++) { %>
                                <tr>
                                    <td>
                                        <%= products[i]._id %>
                                    </td>
                                    <td>
                                        <%= products[i].productName %>
                                    </td>
                                    <td><%=products[i].category.name%></td>
                                    <td>
                                        <%= products[i].quantity %>
                                    </td>
                                    <td>
                                        <input type="number" min="0" value="<%= products[i].quantity %>"
                                            id="stock-<%= products[i]._id %>" class="form-control d-inline-block"
                                            style="width: 100px;">
                                        <button class="btn btn-primary btn-sm ms-2"
                                            onclick="updateStock('<%= products[i]._id %>')">Update</button>
                                    </td>
                                </tr>
                                <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="pagination-area mt-15 mb-50 container">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-start">
    
                    <!-- Page Numbers -->
                    <% 
                    let startPage = Math.max(1, currentPage - 2);
                    let endPage = Math.min(totalPages, startPage + 4);
                    
                    if (endPage - startPage < 4) {
                        startPage = Math.max(1, endPage - 4);
                    }
                    
                    if (startPage > 1) { %>
                        <li class="page-item">
                            <a class="page-link" href="?page=1">1</a>
                        </li>
                        <% if (startPage > 2) { %>
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        <% } %>
                    <% } %>
    
                    <% for(let i = startPage; i <= endPage; i++) { %>
                        <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                        </li>
                    <% } %>
    
                    <% if (endPage < totalPages) { %>
                        <% if (endPage < totalPages - 1) { %>
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        <% } %>
                        <li class="page-item">
                            <a class="page-link" href="?page=<%= totalPages %>"><%= totalPages %></a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div><br>
    </section>
<%- include("../../views/partials/admin/footer") %>

        <script>
            function updateStock(productId) {
    // Get the stock input element
    const stockInput = document.getElementById(`stock-${productId}`);
    const newStock = stockInput.value.trim();

    // Validation checks
    if (newStock === '') {
        Swal.fire({
            icon: 'warning',
            title: 'Invalid Input',
            text: 'Stock cannot be empty',
            confirmButtonColor: '#d33',
            confirmButtonText: 'Close'
        });
        return;
    }

    // Convert to number and check for valid number
    const stockValue = parseInt(newStock, 10);

    // Validation checks
    if (isNaN(stockValue)) {
        Swal.fire({
            icon: 'warning',
            title: 'Invalid Input',
            text: 'Please enter a valid number',
            confirmButtonColor: '#d33',
            confirmButtonText: 'Close'
        });
        return;
    }

    // Check for negative numbers
    if (stockValue < 0) {
        Swal.fire({
            icon: 'warning',
            title: 'Invalid Stock',
            text: 'Stock cannot be a negative number',
            confirmButtonColor: '#d33',
            confirmButtonText: 'Close'
        });
        // Optionally, reset the input to 0
        stockInput.value = '0';
        return;
    }

    // Proceed with fetch if validation passes
    fetch(`/admin/update-stock`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
            productId, 
            newStock: stockValue // Use validated number
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Stock Updated',
                text: 'The stock has been updated successfully!',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    location.reload();
                }
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Update Failed',
                text: data.message || 'Failed to update stock. Please try again.',
                confirmButtonColor: '#d33',
                confirmButtonText: 'Close'
            });
        }
    })
    .catch(error => {
        console.error('Error updating stock:', error);
        Swal.fire({
            icon: 'error',
            title: 'An Error Occurred',
            text: 'There was a problem updating the stock. Please try again.',
            confirmButtonColor: '#d33',
            confirmButtonText: 'Close'
        });
    });
}
            
        </script>