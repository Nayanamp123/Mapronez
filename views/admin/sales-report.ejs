<%- include('../partials/admin/header') %>

    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h4>Sales Report</h4>
            <div class="export-buttons">
                <button class="btn btn-primary me-2" onclick="exportToPDF()">
                    <i class="material-icons md-file_download"></i> Export PDF
                </button>
                <button class="btn btn-success" onclick="exportToExcel()">
                    <i class="material-icons md-file_download"></i> Export Excel
                </button>
            </div>
        </div>



        <div class="d-flex justify-content-around">
            <!-- Replace the first div with this -->
            <div class="mb-4 d-flex gap-3">
                <div class="input-group" style="width: 200px;">
                    <select class="form-control" name="dateRange" id="dateRangeSelect">
                        <option value="">Select Date Range</option>
                        <option value="today">Today</option>
                        <option value="week">This Week</option>
                        <option value="month">This Month</option>
                        <option value="year">This Year</option>
                    </select>
                </div>
            </div>

            <!-- Keep your existing date input form -->
            <div class="mb-4 d-flex gap-3">
                <form class="d-flex align-items-center">
                    <label for="startDate" class="me-2">Start Date:</label>
                    <input type="date" id="startDate" name="startDate" class="form-control me-3" value="<%= dateFilter.startDate %>">
                    <label for="endDate" class="me-2">End Date:</label>
                    <input type="date" id="endDate" name="endDate" class="form-control me-3" value="<%= dateFilter.endDate %>">
                </form>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-lg-3 col-md-6">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-primary-light">
                            <i class="material-icons md-monetization_on text-primary"></i>
                        </span>
                        <div class="text">
                            <h6 class="mb-1">Total Sales</h6>
                            <span>₹<%= summary.totalSales.toLocaleString() %></span>
                        </div>
                    </article>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-success-light">
                            <i class="material-icons md-shopping_bag text-success"></i>
                        </span>
                        <div class="text">
                            <h6 class="mb-1">Total Orders</h6>
                            <span><%= summary.totalOrders %></span>
                        </div>
                    </article>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-warning-light">
                            <i class="material-icons md-loyalty text-warning"></i>
                        </span>
                        <div class="text">
                            <h6 class="mb-1">Total Discount</h6>
                            <span>₹<%= summary.totalDiscount.toLocaleString() %></span>
                        </div>
                    </article>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card card-body mb-4">
                    <article class="icontext">
                        <span class="icon icon-sm rounded-circle bg-info-light">
                            <i class="material-icons md-person text-info"></i>
                        </span>
                        <div class="text">
                            <h6 class="mb-1">Total Customers</h6>
                            <span><%= summary.totalCustomers %></span>
                        </div>
                    </article>
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover" id="salesTable">
                <thead>
                    <tr>
                        <th>Sl No</th>
                        <th>User Name</th>
                        <th>Products</th>
                        <th>Quantity</th>
                        <th>Date</th>
                        <th>Discount Amount</th>
                        <th>Final Amount</th>
                    </tr>
                </thead>
                <tbody>
                    <% let k = (currentPage - 1) * 10 + 1; %>
                        <% for (let i=orders.length - 1; i>= 0; i--) { %>
                            <tr>
                                <td>
                                    <%= k++ %>
                                </td>
                                <td>
                                    <%= orders[i].user.username %>
                                </td>

                                <td>
                                    <ul>
                                        <% orders[i].orderedItems.forEach(item => { %>
                                            <li>
                                                <%= item.product ? item.product.productName : 'Deleted Product' %>
                                            </li>
                                        <% }) %>
                                    </ul>
                                </td>
                                <td>
                                    <ul>
                                        <% orders[i].orderedItems.forEach(item => { %>
                                            <li>
                                                <%= item.quantity || 0 %>
                                            </li>
                                        <% }) %>
                                    </ul>
                                </td>
                                <td>
                                    <%= orders[i].createdAt.toLocaleDateString() %>
                                </td>
                                </td>

                                <td>₹<%= orders[i].discount.toLocaleString() %>
                                </td>
                                <td>₹<%= orders[i].finalAmount.toLocaleString() %>
                                </td>

                            </tr>
                            <% } %>
                </tbody>
            </table>
        </div>
    </div>
    <div class="pagination-area mt-15 mb-50 container">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-start">

                <!-- Page Numbers -->
                <% 
                let startPage = Math.max(1, currentPage - 2);
                let endPage = Math.min(totalPages, startPage + 4);
                
                if (endPage - startPage < 4) {
                    startPage = Math.max(1, endPage - 4);
                }
                
                if (startPage > 1) { %>
                    <li class="page-item">
                        <a class="page-link" href="?page=1">1</a>
                    </li>
                    <% if (startPage > 2) { %>
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    <% } %>
                <% } %>

                <% for(let i = startPage; i <= endPage; i++) { %>
                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                    </li>
                <% } %>

                <% if (endPage < totalPages) { %>
                    <% if (endPage < totalPages - 1) { %>
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    <% } %>
                    <li class="page-item">
                        <a class="page-link" href="?page=<%= totalPages %>"><%= totalPages %></a>
                    </li>
                <% } %>
            </ul>
        </nav>
    </div><br>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.13/jspdf.plugin.autotable.min.js"></script>

    // Add this script to your EJS template
<script>
    function initializeDateFilter() {
        const startDateInput = document.getElementById('startDate');
        const endDateInput = document.getElementById('endDate');
        const dateRangeSelect = document.getElementById('dateRangeSelect');

        function applyDateFilter() {
            const startDate = startDateInput.value;
            const endDate = endDateInput.value;
            
            if (startDate && endDate) {
                // Get current page from URL or default to 1
                const urlParams = new URLSearchParams(window.location.search);
                const currentPage = urlParams.get('page') || 1;
                
                // Construct new URL with filters
                window.location.href = `/admin/sales-report?page=${currentPage}&startDate=${startDate}&endDate=${endDate}`;
            }
        }

        function handleDateRangeSelection(e) {
            const today = new Date();
            const startDate = new Date(today);
            
            switch (this.value) {
                case 'today':
                    startDateInput.value = today.toISOString().split('T')[0];
                    endDateInput.value = today.toISOString().split('T')[0];
                    break;
                case 'week':
                    startDate.setDate(today.getDate() - 7);
                    startDateInput.value = startDate.toISOString().split('T')[0];
                    endDateInput.value = today.toISOString().split('T')[0];
                    break;
                case 'month':
                    startDate.setMonth(today.getMonth() - 1);
                    startDateInput.value = startDate.toISOString().split('T')[0];
                    endDateInput.value = today.toISOString().split('T')[0];
                    break;
                case 'year':
                    startDate.setFullYear(today.getFullYear() - 1);
                    startDateInput.value = startDate.toISOString().split('T')[0];
                    endDateInput.value = today.toISOString().split('T')[0];
                    break;
                default:
                    startDateInput.value = '';
                    endDateInput.value = '';
                    break;
            }
            applyDateFilter();
        }

        // Add event listeners
        dateRangeSelect.addEventListener('change', handleDateRangeSelection);
        startDateInput.addEventListener('change', applyDateFilter);
        endDateInput.addEventListener('change', applyDateFilter);

        // Initialize date inputs with any existing filter values
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.has('startDate')) {
            startDateInput.value = urlParams.get('startDate');
        }
        if (urlParams.has('endDate')) {
            endDateInput.value = urlParams.get('endDate');
        }
    }

    // Initialize date filter when DOM is loaded
    document.addEventListener('DOMContentLoaded', initializeDateFilter);

    // Export functions
    function exportToPDF() {
        // Get current filter parameters
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        
        // Fetch filtered data from server
        fetch(`/admin/export-sales-data?startDate=${startDate}&endDate=${endDate}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const { jsPDF } = window.jspdf;
                    const doc = new jsPDF();

                    // Add title and date
                    doc.setFontSize(18);
                    doc.text('Sales Report', 14, 20);
                    doc.setFontSize(12);
                    doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 14, 30);

                    // Add summary
                    let yPosition = 40;
                    doc.setFontSize(14);
                    doc.text('Sales Summary:', 14, yPosition);
                    
                    doc.setFontSize(12);
                    yPosition += 10;
                    Object.entries(data.summary).forEach(([key, value]) => {
                        const title = key.replace(/([A-Z])/g, ' $1').trim();
                        const text = `${title}: ${typeof value === 'number' ? '₹' + value.toLocaleString() : value}`;
                        doc.text(text, 14, yPosition);
                        yPosition += 8;
                    });

                    // Add table
                    yPosition += 10;
                    const tableHeaders = ['User Name', 'Products', 'Quantities', 'Date', 'Discount', 'Final Amount'];
                    const tableData = data.data.map(item => [
                        item.userName,
                        item.products,
                        item.quantities,
                        item.date,
                        `₹${item.discountAmount.toLocaleString()}`,
                        `₹${item.finalAmount.toLocaleString()}`
                    ]);

                    doc.autoTable({
                        head: [tableHeaders],
                        body: tableData,
                        startY: yPosition,
                        styles: { fontSize: 10 },
                    });

                    doc.save('sales-report.pdf');
                }
            })
            .catch(error => {
                console.error('Error generating PDF:', error);
                alert('Error generating PDF report');
            });
    }

    function exportToExcel() {
        // Get current filter parameters
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        
        // Fetch filtered data from server
        fetch(`/admin/export-sales-data?startDate=${startDate}&endDate=${endDate}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const wb = XLSX.utils.book_new();
                    
                    // Convert data to worksheet format
                    const wsData = data.data.map(item => ({
                        'User Name': item.userName,
                        'Products': item.products,
                        'Quantities': item.quantities,
                        'Date': item.date,
                        'Discount Amount': `₹${item.discountAmount}`,
                        'Final Amount': `₹${item.finalAmount}`
                    }));
                    
                    const ws = XLSX.utils.json_to_sheet(wsData);
                    XLSX.utils.book_append_sheet(wb, ws, "Sales Report");
                    
                    // Save the file
                    XLSX.writeFile(wb, 'sales-report.xlsx');
                }
            })
            .catch(error => {
                console.error('Error generating Excel:', error);
                alert('Error generating Excel report');
            });
    }
</script>

    <%- include('../partials/admin/footer') %>