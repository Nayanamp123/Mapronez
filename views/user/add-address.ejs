<%- include('../partials/user/header') %>

<head>
    <!-- Include SweetAlert CSS & JS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<section class="pt-150 pb-150">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 m-auto">
                <div class="address_wrap widget-taber-content p-30 background-white border-radius-5">
                    <div class="padding_eight_all bg-white">
                        <div class="heading_s1">
                            <h3 class="mb-30">Add New Address</h3>
                        </div>

                        <form id="addressForm" method="post" action="/save-address?id=<%= user %>">
                            <input type="hidden" name="userId" value="<%= user %>"> <!-- Hidden userId field -->
                            <div class="form-group">
                                <label for="addressType">Address Type</label>
                                <select id="addressType" name="addressType" class="form-control">
                                    <option value="Home">Home</option>
                                    <option value="Office">Office</option>
                                    <option value="Other">Other</option>
                                </select>
                                <span id="addressTypeErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="name">Name</label>
                                <input type="text" id="name" name="name" class="form-control">
                                <span id="nameErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="state">State</label>
                                <input type="text" id="state" name="state" class="form-control">
                                <span id="stateErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="city">City</label>
                                <input type="text" id="city" name="city" class="form-control">
                                <span id="cityErr" style="color:red;"></span>
                            </div>
                            
                            <div class="form-group">
                                <label for="streetAddress">Street Address</label>
                                <input type="text" id="streetAddress" name="streetAddress" class="form-control">
                                <span id="streetAddressErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="pincode">Pincode</label>
                                <input type="text" id="pincode" name="pincode" class="form-control">
                                <span id="pincodeErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="phone">Phone</label>
                                <input type="text" id="phone" name="phone" class="form-control">
                                <span id="phoneErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <label for="altPhone">Alternate Phone</label>
                                <input type="text" id="altPhone" name="altPhone" class="form-control">
                                <span id="altPhoneErr" style="color:red;"></span>
                            </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-fill-out btn-block hover-up">Save Address</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<%- include('../partials/user/footer') %>

<script>
    $('#addressForm').submit(function (event) {
        event.preventDefault();

        if (!validateAddressForm()) {
            return;
        }

        $.ajax({
            type: 'POST',
            url: '/save-address?id=<%= user %>',
            data: $(this).serialize(),
            success: function (response) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: response.message,
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.href = '/address';
                });
            },
            error: function () {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'There was an error saving the address.',
                    confirmButtonText: 'Try Again'
                });
            }
        });
    });

    function validateAddressForm() {
    
    const errorFields = [
        'addressTypeErr', 'nameErr', 'cityErr', 'streetAddressErr',
        'stateErr', 'pincodeErr', 'phoneErr', 'altPhoneErr'
    ];
    errorFields.forEach(field => {
        document.getElementById(field).innerText = '';
    });

    let isValid = true;

    // Name validation - only letters allowed, no spaces, minimum 6 characters
    const name = document.getElementById('name').value;
    const nameRegex = /^[A-Za-z]+$/;
    if (name.trim() === '') {
        document.getElementById('nameErr').innerText = 'Name is required.';
        isValid = false;
    } else if (!nameRegex.test(name)) {
        document.getElementById('nameErr').innerText = 'Name should contain only letters, no spaces.';
        isValid = false;
    } else if (name.length < 3) {
        document.getElementById('nameErr').innerText = 'Name must be at least 3 characters.';
        isValid = false;
    }

    // City validation - only letters allowed, no spaces, minimum 6 characters
    const city = document.getElementById('city').value;
    const cityRegex = /^[A-Za-z]+$/;
    if (city.trim() === '') {
        document.getElementById('cityErr').innerText = 'City is required.';
        isValid = false;
    } else if (!cityRegex.test(city)) {
        document.getElementById('cityErr').innerText = 'City should contain only letters, no spaces.';
        isValid = false;
    } else if (city.length < 3) {
        document.getElementById('cityErr').innerText = 'City must be at least 3 characters.';
        isValid = false;
    }

    // Street address validation - alphanumeric without spaces, minimum 6 characters
    const streetAddress = document.getElementById('streetAddress').value;
    const streetRegex = /^[A-Za-z0-9]+$/;
    if (streetAddress.trim() === '') {
        document.getElementById('streetAddressErr').innerText = 'Street address is required.';
        isValid = false;
    } else if (!streetRegex.test(streetAddress)) {
        document.getElementById('streetAddressErr').innerText = 'Street address should contain only letters and numbers, no spaces.';
        isValid = false;
    } else if (streetAddress.length < 3) {
        document.getElementById('streetAddressErr').innerText = 'Street address must be at least 3 characters.';
        isValid = false;
    }

    // State validation - only letters allowed, no spaces, minimum 6 characters
    const state = document.getElementById('state').value;
    const stateRegex = /^[A-Za-z]+$/;
    if (state.trim() === '') {
        document.getElementById('stateErr').innerText = 'State is required.';
        isValid = false;
    } else if (!stateRegex.test(state)) {
        document.getElementById('stateErr').innerText = 'State should contain only letters, no spaces.';
        isValid = false;
    } else if (state.length < 3) {
        document.getElementById('stateErr').innerText = 'State must be at least 3 characters.';
        isValid = false;
    }

    // Pincode validation - exactly 6 digits
    const pincode = document.getElementById('pincode').value;
    const pincodeRegex = /^[0-9]{6}$/;
    if (pincode.trim() === '') {
        document.getElementById('pincodeErr').innerText = 'Pincode is required.';
        isValid = false;
    } else if (!pincodeRegex.test(pincode)) {
        document.getElementById('pincodeErr').innerText = 'Pincode must be exactly 6 digits.';
        isValid = false;
    }

    // Phone validation - exactly 10 digits
    const phone = document.getElementById('phone').value;
    const phoneRegex = /^[0-9]{10}$/;
    if (phone.trim() === '') {
        document.getElementById('phoneErr').innerText = 'Phone number is required.';
        isValid = false;
    } else if (!phoneRegex.test(phone)) {
        document.getElementById('phoneErr').innerText = 'Phone number must be exactly 10 digits.';
        isValid = false;
    }

    // Alternate phone validation - if provided, must be 10 digits
    const altPhone = document.getElementById('altPhone').value;
    if (altPhone.trim() !== '' && !phoneRegex.test(altPhone)) {
        document.getElementById('altPhoneErr').innerText = 'Alternate phone number must be exactly 10 digits.';
        isValid = false;
    }

    return isValid;
}

// Add input event listeners to provide real-time validation
document.addEventListener('DOMContentLoaded', function() {
    // Prevent non-numeric input and spaces for phone and pincode fields
    const numericInputs = ['phone', 'altPhone', 'pincode'];
    numericInputs.forEach(id => {
        const element = document.getElementById(id);
        element.addEventListener('input', function(e) {
            this.value = this.value.replace(/[^0-9]/g, '');
            if (id === 'pincode' && this.value.length > 6) {
                this.value = this.value.slice(0, 6);
            }
            if ((id === 'phone' || id === 'altPhone') && this.value.length > 10) {
                this.value = this.value.slice(0, 10);
            }
        });
    });

    // Prevent non-alphabetic input and spaces for name, city, and state fields
    const alphaInputs = ['name', 'city', 'state'];
    alphaInputs.forEach(id => {
        const element = document.getElementById(id);
        element.addEventListener('input', function(e) {
            this.value = this.value.replace(/[^A-Za-z]/g, '');
        });
    });

    // Handle street address - allow only alphanumeric characters, no spaces
    const streetAddress = document.getElementById('streetAddress');
    streetAddress.addEventListener('input', function(e) {
        this.value = this.value.replace(/[^A-Za-z0-9]/g, '');
    });

    // Remove keydown event listener to prevent space key for all fields
    const allInputs = [...numericInputs, ...alphaInputs, 'streetAddress'];
    allInputs.forEach(id => {
        const element = document.getElementById(id);
        element.addEventListener('keydown', function(e) {
            if (e.key === ' ') {
                e.preventDefault();
            }
        });
    });
});
</script>
